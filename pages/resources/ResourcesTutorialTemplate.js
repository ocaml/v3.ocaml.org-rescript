// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.mjs";
import * as React from "react";
import * as Caml_array from "bs-platform/lib/es6/caml_array.mjs";
import * as Fs$Ocamlorg from "../../bindings/Fs.js";
import * as Unified$Ocamlorg from "../../bindings/Unified.js";
import * as MdastToc$Ocamlorg from "../../common/MdastToc.js";
import * as GrayMatter$Ocamlorg from "../../bindings/GrayMatter.js";
import * as MarkdownPage$Ocamlorg from "../../components/MarkdownPage.js";
import * as TitleHeading$Ocamlorg from "../../components/TitleHeading.js";
import * as MainContainer$Ocamlorg from "../../components/MainContainer.js";

function s(prim) {
  return prim;
}

var Params = {};

function ResourcesTutorialTemplate(Props) {
  var source = Props.source;
  var title = Props.title;
  var pageDescription = Props.pageDescription;
  var tableOfContents = Props.tableOfContents;
  return React.createElement(React.Fragment, undefined, React.createElement(MainContainer$Ocamlorg.None.make, {
                  children: React.createElement("div", {
                        className: "grid grid-cols-9 bg-white"
                      }, React.createElement(MarkdownPage$Ocamlorg.TableOfContents.make, {
                            content: tableOfContents
                          }), React.createElement("div", {
                            className: "col-span-9 lg:col-span-7 bg-graylight relative py-16 overflow-hidden"
                          }, React.createElement("div", {
                                className: "relative px-4 sm:px-6 lg:px-8"
                              }, React.createElement(TitleHeading$Ocamlorg.MarkdownMedium.make, {
                                    title: title,
                                    pageDescription: pageDescription
                                  }), React.createElement(MarkdownPage$Ocamlorg.MarkdownPageBody.make, {
                                    margins: "mt-6",
                                    renderedMarkdown: source
                                  }))))
                }));
}

function getStaticProps(ctx) {
  var match = ctx.params;
  var tutorial = match.tutorial;
  var contentFilePath = "data/tutorials/" + tutorial + "/" + tutorial + ".md";
  var fileContents = Fs$Ocamlorg.readFileSync(contentFilePath);
  var parsed = GrayMatter$Ocamlorg.matter(fileContents);
  GrayMatter$Ocamlorg.forceInvalidException(parsed.data);
  var source = parsed.content;
  var resPromise = Unified$Ocamlorg.$$process(Unified$Ocamlorg.use(Unified$Ocamlorg.use(Unified$Ocamlorg.use(Unified$Ocamlorg.use(Unified$Ocamlorg.use(Unified$Ocamlorg.use(Unified$Ocamlorg.unified(undefined), Unified$Ocamlorg.remarkParse), Unified$Ocamlorg.remarkSlug), MdastToc$Ocamlorg.plugin), Unified$Ocamlorg.remark2rehype), Unified$Ocamlorg.rehypeHighlight), Unified$Ocamlorg.rehypeStringify), source);
  return resPromise.then(function (res) {
              var v = parsed.data.pageDescription;
              var props_source = res.contents;
              var props_title = parsed.data.title;
              var props_pageDescription = v !== undefined ? v : null;
              var props_tableOfContents = {
                contents: "Contents",
                toc: res.toc
              };
              var props = {
                source: props_source,
                title: props_title,
                pageDescription: props_pageDescription,
                tableOfContents: props_tableOfContents
              };
              return Promise.resolve({
                          props: props
                        });
            });
}

function getStaticPaths(param) {
  var markdownFiles = Fs$Ocamlorg.readdirSyncEntries("data/tutorials/");
  return Promise.resolve({
              paths: $$Array.map((function (f) {
                      return {
                              params: {
                                tutorial: Caml_array.get(f.name.split("."), 0)
                              }
                            };
                    }), markdownFiles),
              fallback: false
            });
}

var make = ResourcesTutorialTemplate;

var contentEn = {
  contents: "Contents"
};

var $$default = ResourcesTutorialTemplate;

export {
  s ,
  Params ,
  make ,
  contentEn ,
  getStaticProps ,
  getStaticPaths ,
  $$default ,
  $$default as default,
  
}
/* react Not a pure module */
