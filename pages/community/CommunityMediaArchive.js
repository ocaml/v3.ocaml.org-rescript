// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.mjs";
import * as React from "react";
import * as Talk$Ocamlorg from "../../common/Talk.js";
import * as TitleHeading$Ocamlorg from "../../components/TitleHeading.js";
import * as MainContainer$Ocamlorg from "../../components/MainContainer.js";
import * as SectionContainer$Ocamlorg from "../../components/SectionContainer.js";
import * as ConstructionBanner$Ocamlorg from "../../components/ConstructionBanner.js";

function s(prim) {
  return prim;
}

var Item = {};

function CommunityMediaArchive$MediaSection(Props) {
  var content = Props.content;
  return React.createElement(SectionContainer$Ocamlorg.FullyResponsiveCentered.make, {
              children: null,
              paddingY: "pt-6",
              paddingX: "px-4"
            }, React.createElement("div", {
                  className: "rounded-lg shadow overflow-y-auto relative"
                }, React.createElement("img", {
                      src: content.image
                    })), React.createElement("h2", {
                  className: "font-semibold text-2xl py-9 sm:text-3xl"
                }, content.title), React.createElement("div", {
                  className: "rounded-lg shadow overflow-y-auto relative"
                }, React.createElement("ul", undefined, $$Array.mapi((function (idx, item) {
                            return React.createElement("a", {
                                        key: idx.toString(),
                                        href: item.link,
                                        target: "_blank"
                                      }, React.createElement("li", {
                                            className: "p-6 grid grid-cols-8 w-full cursor-pointer hover:bg-gray-100"
                                          }, React.createElement("p", {
                                                className: "text-yellow-600 col-span-5 font-semibold"
                                              }, item.name + " by " + item.author), React.createElement("p", {
                                                className: "text-gray-400 text-sm col-span-2 ml-4"
                                              }, item.creationDate), React.createElement("p", {
                                                className: "text-right"
                                              }, " -> ")));
                          }), content.items))), React.createElement("p", {
                  className: "text-right py-6 cursor-pointer hover:underline font-semibold text-yellow-600"
                }, "Browse More " + content.title));
}

var MediaSection = {
  Item: Item,
  make: CommunityMediaArchive$MediaSection
};

function CommunityMediaArchive(Props) {
  var title = Props.title;
  var pageDescription = Props.pageDescription;
  var videosContent = Props.videosContent;
  var talksContent = Props.talksContent;
  var papersContent = Props.papersContent;
  return React.createElement(React.Fragment, undefined, React.createElement(ConstructionBanner$Ocamlorg.make, {
                  figmaLink: "https://www.figma.com/file/36JnfpPe1Qoc8PaJq8mGMd/V1-Pages-Next-Step?node-id=430%3A25378",
                  playgroundLink: "/play/resources/mediaarchive"
                }), React.createElement(MainContainer$Ocamlorg.NarrowCentered.make, {
                  children: null
                }, React.createElement(TitleHeading$Ocamlorg.Large.make, {
                      title: title,
                      pageDescription: pageDescription
                    }), React.createElement(CommunityMediaArchive$MediaSection, {
                      content: videosContent
                    }), React.createElement(CommunityMediaArchive$MediaSection, {
                      content: talksContent
                    }), React.createElement(CommunityMediaArchive$MediaSection, {
                      content: papersContent
                    })));
}

function getStaticProps(_ctx) {
  var talks = $$Array.map((function (t) {
          return {
                  name: t.name,
                  author: t.author,
                  creationDate: t.creationDate,
                  link: t.link
                };
        }), Talk$Ocamlorg.readAll(undefined));
  var fillerContent = [
    {
      name: "How to Code a Camel 1",
      author: "Dr. Dromedary",
      creationDate: "02-01-2021",
      link: "https://youtube.com"
    },
    {
      name: "How to Code a Camel 2",
      author: "Dr. Dromedary",
      creationDate: "02-01-2021",
      link: "https://youtube.com"
    },
    {
      name: "How to Code a Camel 3",
      author: "Dr. Dromedary",
      creationDate: "02-01-2021",
      link: "https://youtube.com"
    }
  ];
  var videosContent_title = "Videos";
  var videosContent_image = "https://images.unsplash.com/photo-1485846234645-a62644f84728?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1640&q=80";
  var videosContent = {
    title: videosContent_title,
    image: videosContent_image,
    items: fillerContent
  };
  var talksContent_title = "Talks and Slides";
  var talksContent_image = "https://images.unsplash.com/photo-1560523160-754a9e25c68f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1320&q=80";
  var talksContent = {
    title: talksContent_title,
    image: talksContent_image,
    items: talks
  };
  var papersContent_title = "Papers and Interviews";
  var papersContent_image = "https://www.cst.cam.ac.uk/sites/www.cst.cam.ac.uk/files/view_from_nw.jpg";
  var papersContent = {
    title: papersContent_title,
    image: papersContent_image,
    items: fillerContent
  };
  return {
          props: {
            title: "Media Archive",
            pageDescription: "This is where you can find archived videos, slides from talks, and other media produced by people in the OCaml Community.",
            videosContent: videosContent,
            talksContent: talksContent,
            papersContent: papersContent
          }
        };
}

var make = CommunityMediaArchive;

var $$default = CommunityMediaArchive;

export {
  s ,
  MediaSection ,
  make ,
  getStaticProps ,
  $$default ,
  $$default as default,
  
}
/* react Not a pure module */
